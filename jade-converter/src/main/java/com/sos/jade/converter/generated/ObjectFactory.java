//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.28 at 02:55:09 PM MESZ 
//


package com.sos.jade.converter.generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.sos.jade.converter.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Attachment_QNAME = new QName("", "Attachment");
    private final static QName _CSKeyFile_QNAME = new QName("", "CSKeyFile");
    private final static QName _PollingServer_QNAME = new QName("", "PollingServer");
    private final static QName _MaxConcurrentTransfers_QNAME = new QName("", "MaxConcurrentTransfers");
    private final static QName _CSPassword_QNAME = new QName("", "CSPassword");
    private final static QName _LocalPostProcessing_QNAME = new QName("", "LocalPostProcessing");
    private final static QName _OnSuccess_QNAME = new QName("", "OnSuccess");
    private final static QName _PollForever_QNAME = new QName("", "PollForever");
    private final static QName _CheckSteadyStateErrorState_QNAME = new QName("", "CheckSteadyStateErrorState");
    private final static QName _BackgroundServiceProtocol_QNAME = new QName("", "BackgroundServiceProtocol");
    private final static QName _JumpCommand_QNAME = new QName("", "JumpCommand");
    private final static QName _TransferMode_QNAME = new QName("", "TransferMode");
    private final static QName _BackgroundServiceJobChainName_QNAME = new QName("", "BackgroundServiceJobChainName");
    private final static QName _Domain_QNAME = new QName("", "Domain");
    private final static QName _SecurityMode_QNAME = new QName("", "SecurityMode");
    private final static QName _FileSpec_QNAME = new QName("", "FileSpec");
    private final static QName _ResultSetFile_QNAME = new QName("", "ResultSetFile");
    private final static QName _DisableErrorOnNoFilesFound_QNAME = new QName("", "DisableErrorOnNoFilesFound");
    private final static QName _To_QNAME = new QName("", "To");
    private final static QName _MaxFileAge_QNAME = new QName("", "MaxFileAge");
    private final static QName _CumulativeFileSeparator_QNAME = new QName("", "CumulativeFileSeparator");
    private final static QName _SkipLastFiles_QNAME = new QName("", "SkipLastFiles");
    private final static QName _Rename_QNAME = new QName("", "Rename");
    private final static QName _BCC_QNAME = new QName("", "BCC");
    private final static QName _Port_QNAME = new QName("", "Port");
    private final static QName _StrictHostkeyChecking_QNAME = new QName("", "StrictHostkeyChecking");
    private final static QName _ReceivingClient_QNAME = new QName("", "ReceivingClient");
    private final static QName _ContentType_QNAME = new QName("", "ContentType");
    private final static QName _MinFiles_QNAME = new QName("", "MinFiles");
    private final static QName _CreateIntegrityHashFile_QNAME = new QName("", "CreateIntegrityHashFile");
    private final static QName _Password_QNAME = new QName("", "Password");
    private final static QName _TransferZeroByteFiles_QNAME = new QName("", "TransferZeroByteFiles");
    private final static QName _CSFile_QNAME = new QName("", "CSFile");
    private final static QName _LogFile_QNAME = new QName("", "LogFile");
    private final static QName _EmptyResultSetState_QNAME = new QName("", "EmptyResultSetState");
    private final static QName _CSPermissionsForExportedFile_QNAME = new QName("", "CSPermissionsForExportedFile");
    private final static QName _AcceptUntrustedCertificate_QNAME = new QName("", "AcceptUntrustedCertificate");
    private final static QName _OnError_QNAME = new QName("", "OnError");
    private final static QName _JumpDirectory_QNAME = new QName("", "JumpDirectory");
    private final static QName _MoveTargetFragmentRef_QNAME = new QName("", "MoveTargetFragmentRef");
    private final static QName _VerifyCertificateHostname_QNAME = new QName("", "VerifyCertificateHostname");
    private final static QName _RemoveSourceFragmentRef_QNAME = new QName("", "RemoveSourceFragmentRef");
    private final static QName _Zip_QNAME = new QName("", "Zip");
    private final static QName _URL_QNAME = new QName("", "URL");
    private final static QName _Hostname_QNAME = new QName("", "Hostname");
    private final static QName _From_QNAME = new QName("", "From");
    private final static QName _DebugLevel_QNAME = new QName("", "DebugLevel");
    private final static QName _Subject_QNAME = new QName("", "Subject");
    private final static QName _FTPPreProcessing_QNAME = new QName("", "FTPPreProcessing");
    private final static QName _HTTPProxy_QNAME = new QName("", "HTTPProxy");
    private final static QName _CommandBeforeRename_QNAME = new QName("", "CommandBeforeRename");
    private final static QName _URLConnection_QNAME = new QName("", "URLConnection");
    private final static QName _AuthenticationFile_QNAME = new QName("", "AuthenticationFile");
    private final static QName _MailServer_QNAME = new QName("", "MailServer");
    private final static QName _CSDeleteExportedFileOnExit_QNAME = new QName("", "CSDeleteExportedFileOnExit");
    private final static QName _PollingServerDuration_QNAME = new QName("", "PollingServerDuration");
    private final static QName _CommandAfterOperation_QNAME = new QName("", "CommandAfterOperation");
    private final static QName _CommandBeforeOperation_QNAME = new QName("", "CommandBeforeOperation");
    private final static QName _BackgroundServicePort_QNAME = new QName("", "BackgroundServicePort");
    private final static QName _BasicConnection_QNAME = new QName("", "BasicConnection");
    private final static QName _KeyStoreFile_QNAME = new QName("", "KeyStoreFile");
    private final static QName _MergeOrderParameters_QNAME = new QName("", "MergeOrderParameters");
    private final static QName _HistoryFile_QNAME = new QName("", "HistoryFile");
    private final static QName _PassiveMode_QNAME = new QName("", "PassiveMode");
    private final static QName _BufferSize_QNAME = new QName("", "BufferSize");
    private final static QName _QueueDirectory_QNAME = new QName("", "QueueDirectory");
    private final static QName _Log4JPropertyFile_QNAME = new QName("", "Log4JPropertyFile");
    private final static QName _SOCKS5Proxy_QNAME = new QName("", "SOCKS5Proxy");
    private final static QName _SkipFirstFiles_QNAME = new QName("", "SkipFirstFiles");
    private final static QName _DisableOverwriteFiles_QNAME = new QName("", "DisableOverwriteFiles");
    private final static QName _BackgroundService_QNAME = new QName("", "BackgroundService");
    private final static QName _PollTimeout_QNAME = new QName("", "PollTimeout");
    private final static QName _ReplaceWhat_QNAME = new QName("", "ReplaceWhat");
    private final static QName _JobSchedulerPort_QNAME = new QName("", "JobSchedulerPort");
    private final static QName _Transactional_QNAME = new QName("", "Transactional");
    private final static QName _Body_QNAME = new QName("", "Body");
    private final static QName _FTPSProtocol_QNAME = new QName("", "FTPSProtocol");
    private final static QName _ConcurrentTransfer_QNAME = new QName("", "ConcurrentTransfer");
    private final static QName _Recursive_QNAME = new QName("", "Recursive");
    private final static QName _CopySourceFragmentRef_QNAME = new QName("", "CopySourceFragmentRef");
    private final static QName _FilePath_QNAME = new QName("", "FilePath");
    private final static QName _CompressedFileExtension_QNAME = new QName("", "CompressedFileExtension");
    private final static QName _MaxFileSize_QNAME = new QName("", "MaxFileSize");
    private final static QName _KeepModificationDate_QNAME = new QName("", "KeepModificationDate");
    private final static QName _AppendFiles_QNAME = new QName("", "AppendFiles");
    private final static QName _MinFileAge_QNAME = new QName("", "MinFileAge");
    private final static QName _CreateOrderForAllFiles_QNAME = new QName("", "CreateOrderForAllFiles");
    private final static QName _OrderJobChainName_QNAME = new QName("", "OrderJobChainName");
    private final static QName _SOCKS4Proxy_QNAME = new QName("", "SOCKS4Proxy");
    private final static QName _NextState_QNAME = new QName("", "NextState");
    private final static QName _CumulativeFilename_QNAME = new QName("", "CumulativeFilename");
    private final static QName _GetListSourceFragmentRef_QNAME = new QName("", "GetListSourceFragmentRef");
    private final static QName _AtomicSuffix_QNAME = new QName("", "AtomicSuffix");
    private final static QName _KeyStorePassword_QNAME = new QName("", "KeyStorePassword");
    private final static QName _Encoding_QNAME = new QName("", "Encoding");
    private final static QName _MaxFiles_QNAME = new QName("", "MaxFiles");
    private final static QName _HistoryFileAppendMode_QNAME = new QName("", "HistoryFileAppendMode");
    private final static QName _Account_QNAME = new QName("", "Account");
    private final static QName _BackgroundServiceHost_QNAME = new QName("", "BackgroundServiceHost");
    private final static QName _SFTPPreProcessing_QNAME = new QName("", "SFTPPreProcessing");
    private final static QName _CumulativeFileDelete_QNAME = new QName("", "CumulativeFileDelete");
    private final static QName _FTPPostProcessing_QNAME = new QName("", "FTPPostProcessing");
    private final static QName _JobSchedulerHostname_QNAME = new QName("", "JobSchedulerHostname");
    private final static QName _OnEmptyFiles_QNAME = new QName("", "OnEmptyFiles");
    private final static QName _CheckSteadyStateCount_QNAME = new QName("", "CheckSteadyStateCount");
    private final static QName _Atomicity_QNAME = new QName("", "Atomicity");
    private final static QName _PollErrorState_QNAME = new QName("", "PollErrorState");
    private final static QName _CommandBeforeFile_QNAME = new QName("", "CommandBeforeFile");
    private final static QName _AtomicPrefix_QNAME = new QName("", "AtomicPrefix");
    private final static QName _Passphrase_QNAME = new QName("", "Passphrase");
    private final static QName _History_QNAME = new QName("", "History");
    private final static QName _BasicAuthentication_QNAME = new QName("", "BasicAuthentication");
    private final static QName _WaitForSourceFolder_QNAME = new QName("", "WaitForSourceFolder");
    private final static QName _CSStoreType_QNAME = new QName("", "CSStoreType");
    private final static QName _CommandAfterFile_QNAME = new QName("", "CommandAfterFile");
    private final static QName _ReplaceWith_QNAME = new QName("", "ReplaceWith");
    private final static QName _FileList_QNAME = new QName("", "FileList");
    private final static QName _CSOverwriteExportedFile_QNAME = new QName("", "CSOverwriteExportedFile");
    private final static QName _ProtocolCommandListener_QNAME = new QName("", "ProtocolCommandListener");
    private final static QName _RaiseErrorIfResultSetIs_QNAME = new QName("", "RaiseErrorIfResultSetIs");
    private final static QName _MoveSourceFragmentRef_QNAME = new QName("", "MoveSourceFragmentRef");
    private final static QName _CSExportedFile_QNAME = new QName("", "CSExportedFile");
    private final static QName _SSHAuthentication_QNAME = new QName("", "SSHAuthentication");
    private final static QName _LocalPreProcessing_QNAME = new QName("", "LocalPreProcessing");
    private final static QName _KeyStoreType_QNAME = new QName("", "KeyStoreType");
    private final static QName _FTPSClientSecurity_QNAME = new QName("", "FTPSClientSecurity");
    private final static QName _DisableMakeDirectories_QNAME = new QName("", "DisableMakeDirectories");
    private final static QName _CopyTargetFragmentRef_QNAME = new QName("", "CopyTargetFragmentRef");
    private final static QName _ZlibCompressionLevel_QNAME = new QName("", "ZlibCompressionLevel");
    private final static QName _CheckSteadyStateInterval_QNAME = new QName("", "CheckSteadyStateInterval");
    private final static QName _KeepConnection_QNAME = new QName("", "KeepConnection");
    private final static QName _SupplyingClient_QNAME = new QName("", "SupplyingClient");
    private final static QName _CheckSize_QNAME = new QName("", "CheckSize");
    private final static QName _PollInterval_QNAME = new QName("", "PollInterval");
    private final static QName _SendTransferHistory_QNAME = new QName("", "SendTransferHistory");
    private final static QName _MinFileSize_QNAME = new QName("", "MinFileSize");
    private final static QName _CC_QNAME = new QName("", "CC");
    private final static QName _HashAlgorithm_QNAME = new QName("", "HashAlgorithm");
    private final static QName _CSEntryPath_QNAME = new QName("", "CSEntryPath");
    private final static QName _SFTPPostProcessing_QNAME = new QName("", "SFTPPostProcessing");
    private final static QName _Execute_QNAME = new QName("", "Execute");
    private final static QName _Directory_QNAME = new QName("", "Directory");
    private final static QName _ExpectedSizeOfResultSet_QNAME = new QName("", "ExpectedSizeOfResultSet");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.sos.jade.converter.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SFTPFragment }
     * 
     */
    public SFTPFragment createSFTPFragment() {
        return new SFTPFragment();
    }

    /**
     * Create an instance of {@link AltFTPFragmentRef }
     * 
     */
    public AltFTPFragmentRef createAltFTPFragmentRef() {
        return new AltFTPFragmentRef();
    }

    /**
     * Create an instance of {@link AltHTTPFragmentRef }
     * 
     */
    public AltHTTPFragmentRef createAltHTTPFragmentRef() {
        return new AltHTTPFragmentRef();
    }

    /**
     * Create an instance of {@link URLConnectionType }
     * 
     */
    public URLConnectionType createURLConnectionType() {
        return new URLConnectionType();
    }

    /**
     * Create an instance of {@link FTPSClientSecurityType }
     * 
     */
    public FTPSClientSecurityType createFTPSClientSecurityType() {
        return new FTPSClientSecurityType();
    }

    /**
     * Create an instance of {@link UnauthenticatedProxyType }
     * 
     */
    public UnauthenticatedProxyType createUnauthenticatedProxyType() {
        return new UnauthenticatedProxyType();
    }

    /**
     * Create an instance of {@link LocalTarget }
     * 
     */
    public LocalTarget createLocalTarget() {
        return new LocalTarget();
    }

    /**
     * Create an instance of {@link NotificationTriggers }
     * 
     */
    public NotificationTriggers createNotificationTriggers() {
        return new NotificationTriggers();
    }

    /**
     * Create an instance of {@link SFTPPostProcessingType }
     * 
     */
    public SFTPPostProcessingType createSFTPPostProcessingType() {
        return new SFTPPostProcessingType();
    }

    /**
     * Create an instance of {@link AuthenticationMethodPublickey }
     * 
     */
    public AuthenticationMethodPublickey createAuthenticationMethodPublickey() {
        return new AuthenticationMethodPublickey();
    }

    /**
     * Create an instance of {@link CredentialStore }
     * 
     */
    public CredentialStore createCredentialStore() {
        return new CredentialStore();
    }

    /**
     * Create an instance of {@link ProxyForSFTP }
     * 
     */
    public ProxyForSFTP createProxyForSFTP() {
        return new ProxyForSFTP();
    }

    /**
     * Create an instance of {@link Configurations }
     * 
     */
    public Configurations createConfigurations() {
        return new Configurations();
    }

    /**
     * Create an instance of {@link SMBFragment }
     * 
     */
    public SMBFragment createSMBFragment() {
        return new SMBFragment();
    }

    /**
     * Create an instance of {@link BasicConnectionType }
     * 
     */
    public BasicConnectionType createBasicConnectionType() {
        return new BasicConnectionType();
    }

    /**
     * Create an instance of {@link FTPFragment }
     * 
     */
    public FTPFragment createFTPFragment() {
        return new FTPFragment();
    }

    /**
     * Create an instance of {@link JumpFragment }
     * 
     */
    public JumpFragment createJumpFragment() {
        return new JumpFragment();
    }

    /**
     * Create an instance of {@link AltFTPSFragmentRef }
     * 
     */
    public AltFTPSFragmentRef createAltFTPSFragmentRef() {
        return new AltFTPSFragmentRef();
    }

    /**
     * Create an instance of {@link Copy }
     * 
     */
    public Copy createCopy() {
        return new Copy();
    }

    /**
     * Create an instance of {@link MoveSource }
     * 
     */
    public MoveSource createMoveSource() {
        return new MoveSource();
    }

    /**
     * Create an instance of {@link FileAge }
     * 
     */
    public FileAge createFileAge() {
        return new FileAge();
    }

    /**
     * Create an instance of {@link AltSFTPFragmentRef }
     * 
     */
    public AltSFTPFragmentRef createAltSFTPFragmentRef() {
        return new AltSFTPFragmentRef();
    }

    /**
     * Create an instance of {@link KeyFileAuthentication }
     * 
     */
    public KeyFileAuthentication createKeyFileAuthentication() {
        return new KeyFileAuthentication();
    }

    /**
     * Create an instance of {@link CredentialStoreType }
     * 
     */
    public CredentialStoreType createCredentialStoreType() {
        return new CredentialStoreType();
    }

    /**
     * Create an instance of {@link MailServerFragmentRef }
     * 
     */
    public MailServerFragmentRef createMailServerFragmentRef() {
        return new MailServerFragmentRef();
    }

    /**
     * Create an instance of {@link Move }
     * 
     */
    public Move createMove() {
        return new Move();
    }

    /**
     * Create an instance of {@link LocalPreProcessingType }
     * 
     */
    public LocalPreProcessingType createLocalPreProcessingType() {
        return new LocalPreProcessingType();
    }

    /**
     * Create an instance of {@link TESTFragment }
     * 
     */
    public TESTFragment createTESTFragment() {
        return new TESTFragment();
    }

    /**
     * Create an instance of {@link AltWebDAVFragmentRef }
     * 
     */
    public AltWebDAVFragmentRef createAltWebDAVFragmentRef() {
        return new AltWebDAVFragmentRef();
    }

    /**
     * Create an instance of {@link Profile }
     * 
     */
    public Profile createProfile() {
        return new Profile();
    }

    /**
     * Create an instance of {@link TransferOptions }
     * 
     */
    public TransferOptions createTransferOptions() {
        return new TransferOptions();
    }

    /**
     * Create an instance of {@link SkipFiles }
     * 
     */
    public SkipFiles createSkipFiles() {
        return new SkipFiles();
    }

    /**
     * Create an instance of {@link MailFragmentRef }
     * 
     */
    public MailFragmentRef createMailFragmentRef() {
        return new MailFragmentRef();
    }

    /**
     * Create an instance of {@link Client }
     * 
     */
    public Client createClient() {
        return new Client();
    }

    /**
     * Create an instance of {@link Polling }
     * 
     */
    public Polling createPolling() {
        return new Polling();
    }

    /**
     * Create an instance of {@link FTPPreProcessingType }
     * 
     */
    public FTPPreProcessingType createFTPPreProcessingType() {
        return new FTPPreProcessingType();
    }

    /**
     * Create an instance of {@link MoveTarget }
     * 
     */
    public MoveTarget createMoveTarget() {
        return new MoveTarget();
    }

    /**
     * Create an instance of {@link HistoryType }
     * 
     */
    public HistoryType createHistoryType() {
        return new HistoryType();
    }

    /**
     * Create an instance of {@link Operation }
     * 
     */
    public Operation createOperation() {
        return new Operation();
    }

    /**
     * Create an instance of {@link NotificationFragments }
     * 
     */
    public NotificationFragments createNotificationFragments() {
        return new NotificationFragments();
    }

    /**
     * Create an instance of {@link CumulateFiles }
     * 
     */
    public CumulateFiles createCumulateFiles() {
        return new CumulateFiles();
    }

    /**
     * Create an instance of {@link FTPSFragment }
     * 
     */
    public FTPSFragment createFTPSFragment() {
        return new FTPSFragment();
    }

    /**
     * Create an instance of {@link ProxyForFTPS }
     * 
     */
    public ProxyForFTPS createProxyForFTPS() {
        return new ProxyForFTPS();
    }

    /**
     * Create an instance of {@link CSAuthentication }
     * 
     */
    public CSAuthentication createCSAuthentication() {
        return new CSAuthentication();
    }

    /**
     * Create an instance of {@link AltSMBFragmentRef }
     * 
     */
    public AltSMBFragmentRef createAltSMBFragmentRef() {
        return new AltSMBFragmentRef();
    }

    /**
     * Create an instance of {@link AltWriteableFragmentRefType }
     * 
     */
    public AltWriteableFragmentRefType createAltWriteableFragmentRefType() {
        return new AltWriteableFragmentRefType();
    }

    /**
     * Create an instance of {@link Fragments }
     * 
     */
    public Fragments createFragments() {
        return new Fragments();
    }

    /**
     * Create an instance of {@link ProtocolFragments }
     * 
     */
    public ProtocolFragments createProtocolFragments() {
        return new ProtocolFragments();
    }

    /**
     * Create an instance of {@link ZlibCompression }
     * 
     */
    public ZlibCompression createZlibCompression() {
        return new ZlibCompression();
    }

    /**
     * Create an instance of {@link PasswordAuthentication }
     * 
     */
    public PasswordAuthentication createPasswordAuthentication() {
        return new PasswordAuthentication();
    }

    /**
     * Create an instance of {@link CopyTarget }
     * 
     */
    public CopyTarget createCopyTarget() {
        return new CopyTarget();
    }

    /**
     * Create an instance of {@link ProxyForFTP }
     * 
     */
    public ProxyForFTP createProxyForFTP() {
        return new ProxyForFTP();
    }

    /**
     * Create an instance of {@link HTTPFragment }
     * 
     */
    public HTTPFragment createHTTPFragment() {
        return new HTTPFragment();
    }

    /**
     * Create an instance of {@link HTTPFragmentRef }
     * 
     */
    public HTTPFragmentRef createHTTPFragmentRef() {
        return new HTTPFragmentRef();
    }

    /**
     * Create an instance of {@link WriteableAlternativeFragment }
     * 
     */
    public WriteableAlternativeFragment createWriteableAlternativeFragment() {
        return new WriteableAlternativeFragment();
    }

    /**
     * Create an instance of {@link WriteableAlternativeFragmentRef }
     * 
     */
    public WriteableAlternativeFragmentRef createWriteableAlternativeFragmentRef() {
        return new WriteableAlternativeFragmentRef();
    }

    /**
     * Create an instance of {@link MailType }
     * 
     */
    public MailType createMailType() {
        return new MailType();
    }

    /**
     * Create an instance of {@link RenameType }
     * 
     */
    public RenameType createRenameType() {
        return new RenameType();
    }

    /**
     * Create an instance of {@link CreateOrder }
     * 
     */
    public CreateOrder createCreateOrder() {
        return new CreateOrder();
    }

    /**
     * Create an instance of {@link FileListSelection }
     * 
     */
    public FileListSelection createFileListSelection() {
        return new FileListSelection();
    }

    /**
     * Create an instance of {@link MailServerType.MailHost }
     * 
     */
    public MailServerType.MailHost createMailServerTypeMailHost() {
        return new MailServerType.MailHost();
    }

    /**
     * Create an instance of {@link CheckIntegrityHash }
     * 
     */
    public CheckIntegrityHash createCheckIntegrityHash() {
        return new CheckIntegrityHash();
    }

    /**
     * Create an instance of {@link Remove }
     * 
     */
    public Remove createRemove() {
        return new Remove();
    }

    /**
     * Create an instance of {@link SSHAuthenticationType }
     * 
     */
    public SSHAuthenticationType createSSHAuthenticationType() {
        return new SSHAuthenticationType();
    }

    /**
     * Create an instance of {@link HTTPSFragmentRef }
     * 
     */
    public HTTPSFragmentRef createHTTPSFragmentRef() {
        return new HTTPSFragmentRef();
    }

    /**
     * Create an instance of {@link ProxyForHTTP }
     * 
     */
    public ProxyForHTTP createProxyForHTTP() {
        return new ProxyForHTTP();
    }

    /**
     * Create an instance of {@link CopySource }
     * 
     */
    public CopySource createCopySource() {
        return new CopySource();
    }

    /**
     * Create an instance of {@link ProxyForWebDAV }
     * 
     */
    public ProxyForWebDAV createProxyForWebDAV() {
        return new ProxyForWebDAV();
    }

    /**
     * Create an instance of {@link General }
     * 
     */
    public General createGeneral() {
        return new General();
    }

    /**
     * Create an instance of {@link HTTPSFragment }
     * 
     */
    public HTTPSFragment createHTTPSFragment() {
        return new HTTPSFragment();
    }

    /**
     * Create an instance of {@link MailFragment }
     * 
     */
    public MailFragment createMailFragment() {
        return new MailFragment();
    }

    /**
     * Create an instance of {@link GetListSource }
     * 
     */
    public GetListSource createGetListSource() {
        return new GetListSource();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link ReadableAlternativeFragment }
     * 
     */
    public ReadableAlternativeFragment createReadableAlternativeFragment() {
        return new ReadableAlternativeFragment();
    }

    /**
     * Create an instance of {@link NotificationTriggerType }
     * 
     */
    public NotificationTriggerType createNotificationTriggerType() {
        return new NotificationTriggerType();
    }

    /**
     * Create an instance of {@link AlternativeFragments }
     * 
     */
    public AlternativeFragments createAlternativeFragments() {
        return new AlternativeFragments();
    }

    /**
     * Create an instance of {@link BasicAuthenticationType }
     * 
     */
    public BasicAuthenticationType createBasicAuthenticationType() {
        return new BasicAuthenticationType();
    }

    /**
     * Create an instance of {@link SourceFileOptions }
     * 
     */
    public SourceFileOptions createSourceFileOptions() {
        return new SourceFileOptions();
    }

    /**
     * Create an instance of {@link BackgroundServiceType }
     * 
     */
    public BackgroundServiceType createBackgroundServiceType() {
        return new BackgroundServiceType();
    }

    /**
     * Create an instance of {@link WebDAVFragment }
     * 
     */
    public WebDAVFragment createWebDAVFragment() {
        return new WebDAVFragment();
    }

    /**
     * Create an instance of {@link Directives }
     * 
     */
    public Directives createDirectives() {
        return new Directives();
    }

    /**
     * Create an instance of {@link Selection }
     * 
     */
    public Selection createSelection() {
        return new Selection();
    }

    /**
     * Create an instance of {@link CredentialStoreFragments }
     * 
     */
    public CredentialStoreFragments createCredentialStoreFragments() {
        return new CredentialStoreFragments();
    }

    /**
     * Create an instance of {@link Profiles }
     * 
     */
    public Profiles createProfiles() {
        return new Profiles();
    }

    /**
     * Create an instance of {@link FileSpecSelection }
     * 
     */
    public FileSpecSelection createFileSpecSelection() {
        return new FileSpecSelection();
    }

    /**
     * Create an instance of {@link TargetFileOptions }
     * 
     */
    public TargetFileOptions createTargetFileOptions() {
        return new TargetFileOptions();
    }

    /**
     * Create an instance of {@link ReadableAlternativeFragmentRef }
     * 
     */
    public ReadableAlternativeFragmentRef createReadableAlternativeFragmentRef() {
        return new ReadableAlternativeFragmentRef();
    }

    /**
     * Create an instance of {@link FTPSFragmentRef }
     * 
     */
    public FTPSFragmentRef createFTPSFragmentRef() {
        return new FTPSFragmentRef();
    }

    /**
     * Create an instance of {@link FilePathSelection }
     * 
     */
    public FilePathSelection createFilePathSelection() {
        return new FilePathSelection();
    }

    /**
     * Create an instance of {@link Notifications }
     * 
     */
    public Notifications createNotifications() {
        return new Notifications();
    }

    /**
     * Create an instance of {@link CSExportAttachment }
     * 
     */
    public CSExportAttachment createCSExportAttachment() {
        return new CSExportAttachment();
    }

    /**
     * Create an instance of {@link ReadableFragmentRefType }
     * 
     */
    public ReadableFragmentRefType createReadableFragmentRefType() {
        return new ReadableFragmentRefType();
    }

    /**
     * Create an instance of {@link CheckSteadyState }
     * 
     */
    public CheckSteadyState createCheckSteadyState() {
        return new CheckSteadyState();
    }

    /**
     * Create an instance of {@link GetList }
     * 
     */
    public GetList createGetList() {
        return new GetList();
    }

    /**
     * Create an instance of {@link Logging }
     * 
     */
    public Logging createLogging() {
        return new Logging();
    }

    /**
     * Create an instance of {@link CompressFiles }
     * 
     */
    public CompressFiles createCompressFiles() {
        return new CompressFiles();
    }

    /**
     * Create an instance of {@link WriteableFragmentRefType }
     * 
     */
    public WriteableFragmentRefType createWriteableFragmentRefType() {
        return new WriteableFragmentRefType();
    }

    /**
     * Create an instance of {@link CreateOrderOnRemoteJobScheduler }
     * 
     */
    public CreateOrderOnRemoteJobScheduler createCreateOrderOnRemoteJobScheduler() {
        return new CreateOrderOnRemoteJobScheduler();
    }

    /**
     * Create an instance of {@link CheckResultSetSize }
     * 
     */
    public CheckResultSetSize createCheckResultSetSize() {
        return new CheckResultSetSize();
    }

    /**
     * Create an instance of {@link CredentialStoreFragment }
     * 
     */
    public CredentialStoreFragment createCredentialStoreFragment() {
        return new CredentialStoreFragment();
    }

    /**
     * Create an instance of {@link WebDAVFragmentRef }
     * 
     */
    public WebDAVFragmentRef createWebDAVFragmentRef() {
        return new WebDAVFragmentRef();
    }

    /**
     * Create an instance of {@link FileSize }
     * 
     */
    public FileSize createFileSize() {
        return new FileSize();
    }

    /**
     * Create an instance of {@link FTPFragmentRef }
     * 
     */
    public FTPFragmentRef createFTPFragmentRef() {
        return new FTPFragmentRef();
    }

    /**
     * Create an instance of {@link LocalSource }
     * 
     */
    public LocalSource createLocalSource() {
        return new LocalSource();
    }

    /**
     * Create an instance of {@link AuthenticationMethodPassword }
     * 
     */
    public AuthenticationMethodPassword createAuthenticationMethodPassword() {
        return new AuthenticationMethodPassword();
    }

    /**
     * Create an instance of {@link SFTPFragmentRef }
     * 
     */
    public SFTPFragmentRef createSFTPFragmentRef() {
        return new SFTPFragmentRef();
    }

    /**
     * Create an instance of {@link CredentialStoreFragmentRef }
     * 
     */
    public CredentialStoreFragmentRef createCredentialStoreFragmentRef() {
        return new CredentialStoreFragmentRef();
    }

    /**
     * Create an instance of {@link AltReadableFragmentRefType }
     * 
     */
    public AltReadableFragmentRefType createAltReadableFragmentRefType() {
        return new AltReadableFragmentRefType();
    }

    /**
     * Create an instance of {@link JobScheduler }
     * 
     */
    public JobScheduler createJobScheduler() {
        return new JobScheduler();
    }

    /**
     * Create an instance of {@link LocalPostProcessingType }
     * 
     */
    public LocalPostProcessingType createLocalPostProcessingType() {
        return new LocalPostProcessingType();
    }

    /**
     * Create an instance of {@link SFTPPreProcessingType }
     * 
     */
    public SFTPPreProcessingType createSFTPPreProcessingType() {
        return new SFTPPreProcessingType();
    }

    /**
     * Create an instance of {@link JumpFragmentRef }
     * 
     */
    public JumpFragmentRef createJumpFragmentRef() {
        return new JumpFragmentRef();
    }

    /**
     * Create an instance of {@link ResultSet }
     * 
     */
    public ResultSet createResultSet() {
        return new ResultSet();
    }

    /**
     * Create an instance of {@link MailServerType }
     * 
     */
    public MailServerType createMailServerType() {
        return new MailServerType();
    }

    /**
     * Create an instance of {@link AuthenticatedProxyType }
     * 
     */
    public AuthenticatedProxyType createAuthenticatedProxyType() {
        return new AuthenticatedProxyType();
    }

    /**
     * Create an instance of {@link SMBAuthentication }
     * 
     */
    public SMBAuthentication createSMBAuthentication() {
        return new SMBAuthentication();
    }

    /**
     * Create an instance of {@link ConcurrencyType }
     * 
     */
    public ConcurrencyType createConcurrencyType() {
        return new ConcurrencyType();
    }

    /**
     * Create an instance of {@link RemoveSource }
     * 
     */
    public RemoveSource createRemoveSource() {
        return new RemoveSource();
    }

    /**
     * Create an instance of {@link AtomicityType }
     * 
     */
    public AtomicityType createAtomicityType() {
        return new AtomicityType();
    }

    /**
     * Create an instance of {@link FTPPostProcessingType }
     * 
     */
    public FTPPostProcessingType createFTPPostProcessingType() {
        return new FTPPostProcessingType();
    }

    /**
     * Create an instance of {@link SMBFragmentRef }
     * 
     */
    public SMBFragmentRef createSMBFragmentRef() {
        return new SMBFragmentRef();
    }

    /**
     * Create an instance of {@link MailServerFragments }
     * 
     */
    public MailServerFragments createMailServerFragments() {
        return new MailServerFragments();
    }

    /**
     * Create an instance of {@link AltHTTPSFragmentRef }
     * 
     */
    public AltHTTPSFragmentRef createAltHTTPSFragmentRef() {
        return new AltHTTPSFragmentRef();
    }

    /**
     * Create an instance of {@link MailServerFragment }
     * 
     */
    public MailServerFragment createMailServerFragment() {
        return new MailServerFragment();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Attachment")
    public JAXBElement<String> createAttachment(String value) {
        return new JAXBElement<String>(_Attachment_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSKeyFile")
    public JAXBElement<String> createCSKeyFile(String value) {
        return new JAXBElement<String>(_CSKeyFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollingServer", defaultValue = "false")
    public JAXBElement<Boolean> createPollingServer(Boolean value) {
        return new JAXBElement<Boolean>(_PollingServer_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MaxConcurrentTransfers", defaultValue = "3")
    public JAXBElement<Integer> createMaxConcurrentTransfers(Integer value) {
        return new JAXBElement<Integer>(_MaxConcurrentTransfers_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSPassword")
    public JAXBElement<String> createCSPassword(String value) {
        return new JAXBElement<String>(_CSPassword_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LocalPostProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LocalPostProcessing")
    public JAXBElement<LocalPostProcessingType> createLocalPostProcessing(LocalPostProcessingType value) {
        return new JAXBElement<LocalPostProcessingType>(_LocalPostProcessing_QNAME, LocalPostProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotificationTriggerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OnSuccess")
    public JAXBElement<NotificationTriggerType> createOnSuccess(NotificationTriggerType value) {
        return new JAXBElement<NotificationTriggerType>(_OnSuccess_QNAME, NotificationTriggerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollForever", defaultValue = "false")
    public JAXBElement<Boolean> createPollForever(Boolean value) {
        return new JAXBElement<Boolean>(_PollForever_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CheckSteadyStateErrorState")
    public JAXBElement<String> createCheckSteadyStateErrorState(String value) {
        return new JAXBElement<String>(_CheckSteadyStateErrorState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BackgroundServiceProtocol", defaultValue = "udp")
    public JAXBElement<String> createBackgroundServiceProtocol(String value) {
        return new JAXBElement<String>(_BackgroundServiceProtocol_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "JumpCommand")
    public JAXBElement<String> createJumpCommand(String value) {
        return new JAXBElement<String>(_JumpCommand_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TransferMode", defaultValue = "binary")
    public JAXBElement<String> createTransferMode(String value) {
        return new JAXBElement<String>(_TransferMode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BackgroundServiceJobChainName", defaultValue = "scheduler_jade_history")
    public JAXBElement<String> createBackgroundServiceJobChainName(String value) {
        return new JAXBElement<String>(_BackgroundServiceJobChainName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Domain")
    public JAXBElement<String> createDomain(String value) {
        return new JAXBElement<String>(_Domain_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SecurityMode", defaultValue = "explicit")
    public JAXBElement<String> createSecurityMode(String value) {
        return new JAXBElement<String>(_SecurityMode_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FileSpec")
    public JAXBElement<String> createFileSpec(String value) {
        return new JAXBElement<String>(_FileSpec_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ResultSetFile")
    public JAXBElement<String> createResultSetFile(String value) {
        return new JAXBElement<String>(_ResultSetFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DisableErrorOnNoFilesFound", defaultValue = "false")
    public JAXBElement<Boolean> createDisableErrorOnNoFilesFound(Boolean value) {
        return new JAXBElement<Boolean>(_DisableErrorOnNoFilesFound_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "To")
    public JAXBElement<String> createTo(String value) {
        return new JAXBElement<String>(_To_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MaxFileAge")
    public JAXBElement<String> createMaxFileAge(String value) {
        return new JAXBElement<String>(_MaxFileAge_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CumulativeFileSeparator")
    public JAXBElement<String> createCumulativeFileSeparator(String value) {
        return new JAXBElement<String>(_CumulativeFileSeparator_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SkipLastFiles", defaultValue = "0")
    public JAXBElement<Integer> createSkipLastFiles(Integer value) {
        return new JAXBElement<Integer>(_SkipLastFiles_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RenameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Rename")
    public JAXBElement<RenameType> createRename(RenameType value) {
        return new JAXBElement<RenameType>(_Rename_QNAME, RenameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BCC")
    public JAXBElement<String> createBCC(String value) {
        return new JAXBElement<String>(_BCC_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Port")
    public JAXBElement<Integer> createPort(Integer value) {
        return new JAXBElement<Integer>(_Port_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "StrictHostkeyChecking", defaultValue = "false")
    public JAXBElement<Boolean> createStrictHostkeyChecking(Boolean value) {
        return new JAXBElement<Boolean>(_StrictHostkeyChecking_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ReceivingClient")
    public JAXBElement<String> createReceivingClient(String value) {
        return new JAXBElement<String>(_ReceivingClient_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ContentType", defaultValue = "text/plain")
    public JAXBElement<String> createContentType(String value) {
        return new JAXBElement<String>(_ContentType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MinFiles", defaultValue = "1")
    public JAXBElement<Integer> createMinFiles(Integer value) {
        return new JAXBElement<Integer>(_MinFiles_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateIntegrityHashFile", defaultValue = "false")
    public JAXBElement<Boolean> createCreateIntegrityHashFile(Boolean value) {
        return new JAXBElement<Boolean>(_CreateIntegrityHashFile_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Password")
    public JAXBElement<String> createPassword(String value) {
        return new JAXBElement<String>(_Password_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TransferZeroByteFiles")
    public JAXBElement<String> createTransferZeroByteFiles(String value) {
        return new JAXBElement<String>(_TransferZeroByteFiles_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSFile")
    public JAXBElement<String> createCSFile(String value) {
        return new JAXBElement<String>(_CSFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LogFile", defaultValue = "stdout")
    public JAXBElement<String> createLogFile(String value) {
        return new JAXBElement<String>(_LogFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EmptyResultSetState")
    public JAXBElement<String> createEmptyResultSetState(String value) {
        return new JAXBElement<String>(_EmptyResultSetState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSPermissionsForExportedFile", defaultValue = "600")
    public JAXBElement<String> createCSPermissionsForExportedFile(String value) {
        return new JAXBElement<String>(_CSPermissionsForExportedFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AcceptUntrustedCertificate", defaultValue = "false")
    public JAXBElement<Boolean> createAcceptUntrustedCertificate(Boolean value) {
        return new JAXBElement<Boolean>(_AcceptUntrustedCertificate_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotificationTriggerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OnError")
    public JAXBElement<NotificationTriggerType> createOnError(NotificationTriggerType value) {
        return new JAXBElement<NotificationTriggerType>(_OnError_QNAME, NotificationTriggerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "JumpDirectory", defaultValue = "/tmp")
    public JAXBElement<String> createJumpDirectory(String value) {
        return new JAXBElement<String>(_JumpDirectory_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WriteableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MoveTargetFragmentRef")
    public JAXBElement<WriteableFragmentRefType> createMoveTargetFragmentRef(WriteableFragmentRefType value) {
        return new JAXBElement<WriteableFragmentRefType>(_MoveTargetFragmentRef_QNAME, WriteableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "VerifyCertificateHostname", defaultValue = "true")
    public JAXBElement<Boolean> createVerifyCertificateHostname(Boolean value) {
        return new JAXBElement<Boolean>(_VerifyCertificateHostname_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WriteableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RemoveSourceFragmentRef")
    public JAXBElement<WriteableFragmentRefType> createRemoveSourceFragmentRef(WriteableFragmentRefType value) {
        return new JAXBElement<WriteableFragmentRefType>(_RemoveSourceFragmentRef_QNAME, WriteableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Zip", defaultValue = "false")
    public JAXBElement<Boolean> createZip(Boolean value) {
        return new JAXBElement<Boolean>(_Zip_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "URL")
    public JAXBElement<String> createURL(String value) {
        return new JAXBElement<String>(_URL_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Hostname")
    public JAXBElement<String> createHostname(String value) {
        return new JAXBElement<String>(_Hostname_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "From")
    public JAXBElement<String> createFrom(String value) {
        return new JAXBElement<String>(_From_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DebugLevel", defaultValue = "0")
    public JAXBElement<Integer> createDebugLevel(Integer value) {
        return new JAXBElement<Integer>(_DebugLevel_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Subject")
    public JAXBElement<String> createSubject(String value) {
        return new JAXBElement<String>(_Subject_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FTPPreProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FTPPreProcessing")
    public JAXBElement<FTPPreProcessingType> createFTPPreProcessing(FTPPreProcessingType value) {
        return new JAXBElement<FTPPreProcessingType>(_FTPPreProcessing_QNAME, FTPPreProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AuthenticatedProxyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HTTPProxy")
    public JAXBElement<AuthenticatedProxyType> createHTTPProxy(AuthenticatedProxyType value) {
        return new JAXBElement<AuthenticatedProxyType>(_HTTPProxy_QNAME, AuthenticatedProxyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CommandBeforeRename")
    public JAXBElement<String> createCommandBeforeRename(String value) {
        return new JAXBElement<String>(_CommandBeforeRename_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link URLConnectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "URLConnection")
    public JAXBElement<URLConnectionType> createURLConnection(URLConnectionType value) {
        return new JAXBElement<URLConnectionType>(_URLConnection_QNAME, URLConnectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AuthenticationFile")
    public JAXBElement<String> createAuthenticationFile(String value) {
        return new JAXBElement<String>(_AuthenticationFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MailServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MailServer")
    public JAXBElement<MailServerType> createMailServer(MailServerType value) {
        return new JAXBElement<MailServerType>(_MailServer_QNAME, MailServerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSDeleteExportedFileOnExit", defaultValue = "true")
    public JAXBElement<Boolean> createCSDeleteExportedFileOnExit(Boolean value) {
        return new JAXBElement<Boolean>(_CSDeleteExportedFileOnExit_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollingServerDuration", defaultValue = "0")
    public JAXBElement<Integer> createPollingServerDuration(Integer value) {
        return new JAXBElement<Integer>(_PollingServerDuration_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CommandAfterOperation")
    public JAXBElement<String> createCommandAfterOperation(String value) {
        return new JAXBElement<String>(_CommandAfterOperation_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CommandBeforeOperation")
    public JAXBElement<String> createCommandBeforeOperation(String value) {
        return new JAXBElement<String>(_CommandBeforeOperation_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BackgroundServicePort", defaultValue = "4444")
    public JAXBElement<Integer> createBackgroundServicePort(Integer value) {
        return new JAXBElement<Integer>(_BackgroundServicePort_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasicConnectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BasicConnection")
    public JAXBElement<BasicConnectionType> createBasicConnection(BasicConnectionType value) {
        return new JAXBElement<BasicConnectionType>(_BasicConnection_QNAME, BasicConnectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeyStoreFile")
    public JAXBElement<String> createKeyStoreFile(String value) {
        return new JAXBElement<String>(_KeyStoreFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MergeOrderParameters", defaultValue = "false")
    public JAXBElement<Boolean> createMergeOrderParameters(Boolean value) {
        return new JAXBElement<Boolean>(_MergeOrderParameters_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HistoryFile")
    public JAXBElement<String> createHistoryFile(String value) {
        return new JAXBElement<String>(_HistoryFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PassiveMode", defaultValue = "false")
    public JAXBElement<Boolean> createPassiveMode(Boolean value) {
        return new JAXBElement<Boolean>(_PassiveMode_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BufferSize", defaultValue = "4096")
    public JAXBElement<Integer> createBufferSize(Integer value) {
        return new JAXBElement<Integer>(_BufferSize_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "QueueDirectory")
    public JAXBElement<String> createQueueDirectory(String value) {
        return new JAXBElement<String>(_QueueDirectory_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Log4JPropertyFile", defaultValue = "./log4j.properties")
    public JAXBElement<String> createLog4JPropertyFile(String value) {
        return new JAXBElement<String>(_Log4JPropertyFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AuthenticatedProxyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOCKS5Proxy")
    public JAXBElement<AuthenticatedProxyType> createSOCKS5Proxy(AuthenticatedProxyType value) {
        return new JAXBElement<AuthenticatedProxyType>(_SOCKS5Proxy_QNAME, AuthenticatedProxyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SkipFirstFiles", defaultValue = "0")
    public JAXBElement<Integer> createSkipFirstFiles(Integer value) {
        return new JAXBElement<Integer>(_SkipFirstFiles_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DisableOverwriteFiles", defaultValue = "false")
    public JAXBElement<Boolean> createDisableOverwriteFiles(Boolean value) {
        return new JAXBElement<Boolean>(_DisableOverwriteFiles_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BackgroundServiceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BackgroundService")
    public JAXBElement<BackgroundServiceType> createBackgroundService(BackgroundServiceType value) {
        return new JAXBElement<BackgroundServiceType>(_BackgroundService_QNAME, BackgroundServiceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollTimeout", defaultValue = "0")
    public JAXBElement<Integer> createPollTimeout(Integer value) {
        return new JAXBElement<Integer>(_PollTimeout_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ReplaceWhat")
    public JAXBElement<String> createReplaceWhat(String value) {
        return new JAXBElement<String>(_ReplaceWhat_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "JobSchedulerPort", defaultValue = "4444")
    public JAXBElement<Integer> createJobSchedulerPort(Integer value) {
        return new JAXBElement<Integer>(_JobSchedulerPort_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Transactional", defaultValue = "false")
    public JAXBElement<Boolean> createTransactional(Boolean value) {
        return new JAXBElement<Boolean>(_Transactional_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Body")
    public JAXBElement<String> createBody(String value) {
        return new JAXBElement<String>(_Body_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FTPSProtocol", defaultValue = "SSL")
    public JAXBElement<String> createFTPSProtocol(String value) {
        return new JAXBElement<String>(_FTPSProtocol_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConcurrencyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ConcurrentTransfer")
    public JAXBElement<ConcurrencyType> createConcurrentTransfer(ConcurrencyType value) {
        return new JAXBElement<ConcurrencyType>(_ConcurrentTransfer_QNAME, ConcurrencyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Recursive", defaultValue = "false")
    public JAXBElement<Boolean> createRecursive(Boolean value) {
        return new JAXBElement<Boolean>(_Recursive_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReadableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CopySourceFragmentRef")
    public JAXBElement<ReadableFragmentRefType> createCopySourceFragmentRef(ReadableFragmentRefType value) {
        return new JAXBElement<ReadableFragmentRefType>(_CopySourceFragmentRef_QNAME, ReadableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FilePath")
    public JAXBElement<String> createFilePath(String value) {
        return new JAXBElement<String>(_FilePath_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CompressedFileExtension", defaultValue = ".gz")
    public JAXBElement<String> createCompressedFileExtension(String value) {
        return new JAXBElement<String>(_CompressedFileExtension_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MaxFileSize")
    public JAXBElement<Integer> createMaxFileSize(Integer value) {
        return new JAXBElement<Integer>(_MaxFileSize_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeepModificationDate", defaultValue = "false")
    public JAXBElement<Boolean> createKeepModificationDate(Boolean value) {
        return new JAXBElement<Boolean>(_KeepModificationDate_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AppendFiles", defaultValue = "false")
    public JAXBElement<Boolean> createAppendFiles(Boolean value) {
        return new JAXBElement<Boolean>(_AppendFiles_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MinFileAge")
    public JAXBElement<String> createMinFileAge(String value) {
        return new JAXBElement<String>(_MinFileAge_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateOrderForAllFiles", defaultValue = "false")
    public JAXBElement<Boolean> createCreateOrderForAllFiles(Boolean value) {
        return new JAXBElement<Boolean>(_CreateOrderForAllFiles_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OrderJobChainName")
    public JAXBElement<String> createOrderJobChainName(String value) {
        return new JAXBElement<String>(_OrderJobChainName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnauthenticatedProxyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SOCKS4Proxy")
    public JAXBElement<UnauthenticatedProxyType> createSOCKS4Proxy(UnauthenticatedProxyType value) {
        return new JAXBElement<UnauthenticatedProxyType>(_SOCKS4Proxy_QNAME, UnauthenticatedProxyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "NextState")
    public JAXBElement<String> createNextState(String value) {
        return new JAXBElement<String>(_NextState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CumulativeFilename")
    public JAXBElement<String> createCumulativeFilename(String value) {
        return new JAXBElement<String>(_CumulativeFilename_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReadableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "GetListSourceFragmentRef")
    public JAXBElement<ReadableFragmentRefType> createGetListSourceFragmentRef(ReadableFragmentRefType value) {
        return new JAXBElement<ReadableFragmentRefType>(_GetListSourceFragmentRef_QNAME, ReadableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AtomicSuffix")
    public JAXBElement<String> createAtomicSuffix(String value) {
        return new JAXBElement<String>(_AtomicSuffix_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeyStorePassword")
    public JAXBElement<String> createKeyStorePassword(String value) {
        return new JAXBElement<String>(_KeyStorePassword_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Encoding", defaultValue = "7bit")
    public JAXBElement<String> createEncoding(String value) {
        return new JAXBElement<String>(_Encoding_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MaxFiles", defaultValue = "-1")
    public JAXBElement<Integer> createMaxFiles(Integer value) {
        return new JAXBElement<Integer>(_MaxFiles_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HistoryFileAppendMode", defaultValue = "false")
    public JAXBElement<Boolean> createHistoryFileAppendMode(Boolean value) {
        return new JAXBElement<Boolean>(_HistoryFileAppendMode_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Account")
    public JAXBElement<String> createAccount(String value) {
        return new JAXBElement<String>(_Account_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BackgroundServiceHost", defaultValue = "localhost")
    public JAXBElement<String> createBackgroundServiceHost(String value) {
        return new JAXBElement<String>(_BackgroundServiceHost_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SFTPPreProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SFTPPreProcessing")
    public JAXBElement<SFTPPreProcessingType> createSFTPPreProcessing(SFTPPreProcessingType value) {
        return new JAXBElement<SFTPPreProcessingType>(_SFTPPreProcessing_QNAME, SFTPPreProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CumulativeFileDelete", defaultValue = "false")
    public JAXBElement<Boolean> createCumulativeFileDelete(Boolean value) {
        return new JAXBElement<Boolean>(_CumulativeFileDelete_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FTPPostProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FTPPostProcessing")
    public JAXBElement<FTPPostProcessingType> createFTPPostProcessing(FTPPostProcessingType value) {
        return new JAXBElement<FTPPostProcessingType>(_FTPPostProcessing_QNAME, FTPPostProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "JobSchedulerHostname")
    public JAXBElement<String> createJobSchedulerHostname(String value) {
        return new JAXBElement<String>(_JobSchedulerHostname_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotificationTriggerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OnEmptyFiles")
    public JAXBElement<NotificationTriggerType> createOnEmptyFiles(NotificationTriggerType value) {
        return new JAXBElement<NotificationTriggerType>(_OnEmptyFiles_QNAME, NotificationTriggerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CheckSteadyStateCount", defaultValue = "30")
    public JAXBElement<Integer> createCheckSteadyStateCount(Integer value) {
        return new JAXBElement<Integer>(_CheckSteadyStateCount_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AtomicityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Atomicity")
    public JAXBElement<AtomicityType> createAtomicity(AtomicityType value) {
        return new JAXBElement<AtomicityType>(_Atomicity_QNAME, AtomicityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollErrorState")
    public JAXBElement<String> createPollErrorState(String value) {
        return new JAXBElement<String>(_PollErrorState_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CommandBeforeFile")
    public JAXBElement<String> createCommandBeforeFile(String value) {
        return new JAXBElement<String>(_CommandBeforeFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AtomicPrefix")
    public JAXBElement<String> createAtomicPrefix(String value) {
        return new JAXBElement<String>(_AtomicPrefix_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Passphrase")
    public JAXBElement<String> createPassphrase(String value) {
        return new JAXBElement<String>(_Passphrase_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HistoryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "History")
    public JAXBElement<HistoryType> createHistory(HistoryType value) {
        return new JAXBElement<HistoryType>(_History_QNAME, HistoryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasicAuthenticationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BasicAuthentication")
    public JAXBElement<BasicAuthenticationType> createBasicAuthentication(BasicAuthenticationType value) {
        return new JAXBElement<BasicAuthenticationType>(_BasicAuthentication_QNAME, BasicAuthenticationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WaitForSourceFolder")
    public JAXBElement<Boolean> createWaitForSourceFolder(Boolean value) {
        return new JAXBElement<Boolean>(_WaitForSourceFolder_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSStoreType", defaultValue = "KeePassX")
    public JAXBElement<String> createCSStoreType(String value) {
        return new JAXBElement<String>(_CSStoreType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CommandAfterFile")
    public JAXBElement<String> createCommandAfterFile(String value) {
        return new JAXBElement<String>(_CommandAfterFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ReplaceWith")
    public JAXBElement<String> createReplaceWith(String value) {
        return new JAXBElement<String>(_ReplaceWith_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FileList")
    public JAXBElement<String> createFileList(String value) {
        return new JAXBElement<String>(_FileList_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSOverwriteExportedFile", defaultValue = "false")
    public JAXBElement<Boolean> createCSOverwriteExportedFile(Boolean value) {
        return new JAXBElement<Boolean>(_CSOverwriteExportedFile_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ProtocolCommandListener", defaultValue = "false")
    public JAXBElement<Boolean> createProtocolCommandListener(Boolean value) {
        return new JAXBElement<Boolean>(_ProtocolCommandListener_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RaiseErrorIfResultSetIs")
    public JAXBElement<String> createRaiseErrorIfResultSetIs(String value) {
        return new JAXBElement<String>(_RaiseErrorIfResultSetIs_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WriteableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MoveSourceFragmentRef")
    public JAXBElement<WriteableFragmentRefType> createMoveSourceFragmentRef(WriteableFragmentRefType value) {
        return new JAXBElement<WriteableFragmentRefType>(_MoveSourceFragmentRef_QNAME, WriteableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSExportedFile")
    public JAXBElement<String> createCSExportedFile(String value) {
        return new JAXBElement<String>(_CSExportedFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SSHAuthenticationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SSHAuthentication")
    public JAXBElement<SSHAuthenticationType> createSSHAuthentication(SSHAuthenticationType value) {
        return new JAXBElement<SSHAuthenticationType>(_SSHAuthentication_QNAME, SSHAuthenticationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LocalPreProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LocalPreProcessing")
    public JAXBElement<LocalPreProcessingType> createLocalPreProcessing(LocalPreProcessingType value) {
        return new JAXBElement<LocalPreProcessingType>(_LocalPreProcessing_QNAME, LocalPreProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeyStoreType", defaultValue = "JKS")
    public JAXBElement<String> createKeyStoreType(String value) {
        return new JAXBElement<String>(_KeyStoreType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FTPSClientSecurityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FTPSClientSecurity")
    public JAXBElement<FTPSClientSecurityType> createFTPSClientSecurity(FTPSClientSecurityType value) {
        return new JAXBElement<FTPSClientSecurityType>(_FTPSClientSecurity_QNAME, FTPSClientSecurityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "DisableMakeDirectories", defaultValue = "false")
    public JAXBElement<Boolean> createDisableMakeDirectories(Boolean value) {
        return new JAXBElement<Boolean>(_DisableMakeDirectories_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WriteableFragmentRefType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CopyTargetFragmentRef")
    public JAXBElement<WriteableFragmentRefType> createCopyTargetFragmentRef(WriteableFragmentRefType value) {
        return new JAXBElement<WriteableFragmentRefType>(_CopyTargetFragmentRef_QNAME, WriteableFragmentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ZlibCompressionLevel", defaultValue = "1")
    public JAXBElement<Integer> createZlibCompressionLevel(Integer value) {
        return new JAXBElement<Integer>(_ZlibCompressionLevel_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CheckSteadyStateInterval", defaultValue = "1")
    public JAXBElement<Integer> createCheckSteadyStateInterval(Integer value) {
        return new JAXBElement<Integer>(_CheckSteadyStateInterval_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeepConnection", defaultValue = "false")
    public JAXBElement<Boolean> createKeepConnection(Boolean value) {
        return new JAXBElement<Boolean>(_KeepConnection_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SupplyingClient")
    public JAXBElement<String> createSupplyingClient(String value) {
        return new JAXBElement<String>(_SupplyingClient_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CheckSize", defaultValue = "false")
    public JAXBElement<Boolean> createCheckSize(Boolean value) {
        return new JAXBElement<Boolean>(_CheckSize_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PollInterval", defaultValue = "60")
    public JAXBElement<Integer> createPollInterval(Integer value) {
        return new JAXBElement<Integer>(_PollInterval_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SendTransferHistory", defaultValue = "false")
    public JAXBElement<Boolean> createSendTransferHistory(Boolean value) {
        return new JAXBElement<Boolean>(_SendTransferHistory_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MinFileSize")
    public JAXBElement<Integer> createMinFileSize(Integer value) {
        return new JAXBElement<Integer>(_MinFileSize_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CC")
    public JAXBElement<String> createCC(String value) {
        return new JAXBElement<String>(_CC_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "HashAlgorithm", defaultValue = "md5")
    public JAXBElement<String> createHashAlgorithm(String value) {
        return new JAXBElement<String>(_HashAlgorithm_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CSEntryPath")
    public JAXBElement<String> createCSEntryPath(String value) {
        return new JAXBElement<String>(_CSEntryPath_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SFTPPostProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SFTPPostProcessing")
    public JAXBElement<SFTPPostProcessingType> createSFTPPostProcessing(SFTPPostProcessingType value) {
        return new JAXBElement<SFTPPostProcessingType>(_SFTPPostProcessing_QNAME, SFTPPostProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Execute")
    public JAXBElement<Object> createExecute(Object value) {
        return new JAXBElement<Object>(_Execute_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Directory")
    public JAXBElement<String> createDirectory(String value) {
        return new JAXBElement<String>(_Directory_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ExpectedSizeOfResultSet")
    public JAXBElement<Integer> createExpectedSizeOfResultSet(Integer value) {
        return new JAXBElement<Integer>(_ExpectedSizeOfResultSet_QNAME, Integer.class, null, value);
    }

}
